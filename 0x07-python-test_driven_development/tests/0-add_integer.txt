# Test cases for 0-add_integer.py

>>> add_integer = __import__('0-add_integer').add_integer

# Test with two positive Integers
>>> add_integer(5, 7)
12

# Test with two negative Integers
>>> add_integer(-2, -3)
-5

# Test with a negative and a postive number
>>> add_integer(-6, 4)
-2

# Test with two positive float numbers (should be casted to int)
>>> add_integer(3.5, 5.0)
8

# Test with two negative float numbers
>>> add_integer(-2.9, -0.2)
-3

# Test with an integer and a float number
>>> add_integer(2.5, -5)
-2

# Test with only one value since b has a default of 98
>>> add_integer(2)
100

# Test with non-numbers( strings)
>>> add_integer("hi", 3)
Traceback (most recent call last): 
...
TypeError: a must be an integer

>>> add_integer(5,"hi")
Traceback (most recent call last):
...
TypeError: b must be an integer

# using functions alone
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

#Testing with strings
>>> add_integer("hi", "there")
Traceback (most recent call last):
...
TypeError: a must be an integer
